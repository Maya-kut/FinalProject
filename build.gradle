plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.12.0'
}
def allureVersion = "2.21.0",
    selenideVersion = "6.19.1",
    junitVersion = "5.10.0",
    slf4jVersion = "2.0.7",
    ownerVersion = "1.0.12",
    assertjCoreVersion = "3.23.1",
    webdriverVersion = "5.5.3"

allure {
    report {
        version(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

repositories {
    mavenCentral()

}


compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}


dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "io.github.bonigarcia:webdrivermanager:$webdriverVersion",
            "commons-io:commons-io:2.6"

    )
}
dependencies {
    implementation 'com.github.javafaker:javafaker:1.0.2'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

test {
    useJUnitPlatform()
    systemProperties(System.getProperties())
}

task web_test(type: Test) {
    useJUnitPlatform {
        includeTags("web")
    }
}

